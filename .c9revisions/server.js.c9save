{"ts":1370495437072,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var express = require('express')\r\n  , http = require('http');\r\nvar app = express();\r\nvar path = require('path');\r\n\r\nvar util = require(\"util\");\r\nvar url = require(\"url\");\r\nvar fs = require(\"fs\");\r\n\r\nvar mysql = require('mysql');\r\n\r\n\r\nvar server = http.createServer(app);\r\nvar io = require('socket.io').listen(server);\r\n\r\n\r\nvar webpage_controller = require(\"./webpageController\");\r\nvar teacher_controller = require(\"./teacherController\");\r\nvar student_controller = require(\"./studentController\");\r\n\r\nserver.listen(9999);\r\n//server.listen(process.env.PORT);\r\n\r\n\r\n////////상수///////\r\n\r\nfunction ID_SOCKET_PAIR() {\r\n      var id;\r\n    var socket;\r\n    var deviceType;\r\n    var manType;\r\n\r\n}\r\n\r\nvar TEACHER = 1;\r\nvar STUDENT = 2;\r\n\r\nvar MOBILE = 1;\r\nvar WEBPAGE = 2;\r\n\r\n\r\nvar ID_SOC_PAIR = [];\r\n\r\n    \r\nvar mysqlConfig = {\r\n    host : \"lattetime.cafe24.com\",\r\n    port : \"3306\",\r\n    user : \"root\",\r\n    password : \"latte!123\",\r\n    database : \"lattetime\",\r\n    insecureAuth: true\r\n}\r\n\r\nvar conn = mysql.createConnection(mysqlConfig);\r\n\r\nconn.connect();\r\n\r\n\r\n////////////////////////웹 서버 부분//////////\r\n\r\n//파일 리다이렉트, 페이지 보여주기 등\r\napp.get('/', function(req, res) {\r\n    console.log(\"===============================================\");\r\n    res.sendfile(__dirname + '/index.html');\r\n});\r\n\r\napp.get('/teacher', function(req, res) {\r\n    console.log(\"===============================================\");\r\n    res.sendfile(__dirname + '/teacher.html');\r\n});\r\n\r\napp.get('/student', function(req, res) {\r\n    console.log(\"===============================================\");\r\n    res.sendfile(__dirname + '/student.html');\r\n});\r\n\r\napp.get('/nathan', function(req, res) {\r\n    console.log(\"===============================================\");\r\n    res.sendfile(__dirname + '/nathan.html');\r\n});\r\n\r\n\r\n//url 들어오면 파일 주는 부분\r\napp.use(function(request, response, next){\r\n    var uri = url.parse(request.url).pathname;\r\n    console.log(\"uri : \"+uri);\r\n        var filename = path.join(process.cwd(), uri);\r\n        util.puts(\"filename : \" + filename);\r\n        fs.exists(filename, function(exists){\r\n                if(!exists){\r\n                        response.writeHead(404,{\"Content-type\":\"text/plain\"} );\r\n                        response.end(\"404 Not Found\\n\");\r\n                        return;\r\n                }\r\n\r\n                fs.readFile(filename, function(err, data){\r\n                        if(err){\r\n                                console.log(\"error!!!\");\r\n                                response.writeHead(500, {\"Content-type\":\"text/plain\"});\r\n                                response.end(err + \"\\n\");\r\n                                return;\r\n                        }\r\n                        response.statusCode = 200;\r\n                      //  response.write(data, \"binary\");\r\n                        response.end(data, \"binary\");\r\n                });\r\n        });\r\n});\r\n\r\n//////////////////////////////////////\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////웹소켓 시작\r\n\r\n\r\n\r\n//**************\r\n//리스닝\r\n//**************\r\n\r\nconsole.log(\"Listening....\");\r\nconsole.log(\"ip : \" + process.env.IP + \", port : \" + process.env.PORT);\r\n\r\n\r\n\r\nio.sockets.on('connection', function (socket) {\r\n\r\nconsole.log(\"User connected\");\r\n\r\n \r\n socket.on('close', function(data){\r\n      console.log(\"close connection\");\r\n });\r\n \r\nsocket.on('data', function( data) {\r\n    \r\n console.log(\"data received\");\r\n    \r\n    var received; //받은 데이터\r\n\r\n    //JSON이용해서 Message Parse\r\n\treceived = data;\r\n \r\n    var tempIdConn\r\n\r\n    //메세지에 따라 처리\r\n\t\tswitch(parseInt(received.MessageNum / 100, 10)){\r\n\t\t\tcase 1:\r\n\t\t\t\tconsole.log(\"Messeage num 100 ~ 199 : Teacher Mobile\");\r\n                   //커넥션을 배열로 유지\r\n             tempIdConn =  new ID_SOCKET_PAIR();\r\n             tempIdConn.id = received.id;\r\n             tempIdConn.socket = socket;\r\n             tempIdConn.deviceType = MOBILE;\r\n             tempIdConn.manType = TEACHER;\r\n             ID_SOC_PAIR.push(tempIdConn);\r\n             \r\n                teacher_controller.call(socket, received,  conn,  ID_SOC_PAIR);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tconsole.log(\"Messeage num 200 ~ 299 : Student Mobile\");\r\n                   //커넥션을 배열로 유지\r\n             tempIdConn = new ID_SOCKET_PAIR();\r\n             tempIdConn.id = received.id;\r\n             tempIdConn.socket = socket;\r\n             tempIdConn.deviceType = MOBILE;\r\n             tempIdConn.manType = STUDENT;\r\n             ID_SOC_PAIR.push(tempIdConn);\r\n                student_controller.call(socket, received,  conn, ID_SOC_PAIR);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n                console.log(\"Messeage num 300 ~ 399 : Web page\");\r\n                   //커넥션을 배열로 유지\r\n             tempIdConn =   new ID_SOCKET_PAIR();\r\n             tempIdConn.id = received.id;\r\n             tempIdConn.socket = socket;\r\n             tempIdConn.deviceType = WEBPAGE;\r\n             tempIdConn.manType = TEACHER;\r\n             ID_SOC_PAIR.push(tempIdConn);\r\n                webpage_controller.call(socket, received,  conn, ID_SOC_PAIR);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: //에러 \r\n\t\t\t\t;\r\n\t\t}\r\n\t\t\r\n\t//결과는 마이에스큐엘까지 끝난 다음 반환한다. \r\n  \r\n});\r\n\r\n\r\n});\r\n\r\n\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5088}]],"length":5088}
{"contributors":[],"silentsave":false,"ts":1370495572441,"patch":[[{"diffs":[[0,"r\");\r\n\r\n"],[1,"//"],[0,"server.l"]],"start1":491,"start2":491,"length1":16,"length2":18},{"diffs":[[0,"9999);\r\n"],[-1,"//"],[0,"server.l"]],"start1":515,"start2":515,"length1":18,"length2":16}]],"length":5088,"saved":false}
